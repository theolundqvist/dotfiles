{
  "version": 3,
  "sources": ["../src/remove-paywall.tsx", "../src/utils.ts"],
  "sourcesContent": ["import { LaunchProps, Toast, getPreferenceValues, open, showToast } from \"@raycast/api\";\nimport { getExistingText, isUrl } from \"./utils\";\n\nexport default async (props: LaunchProps<{ arguments: Arguments.RemovePaywall }>) => {\n  const { service } = await getPreferenceValues<Preferences>();\n\n  try {\n    const argumentText = props.arguments.url?.trim() ?? \"\";\n    const existingText = await getExistingText(props.fallbackText);\n    const url = [argumentText, existingText].find((v) => !!v);\n\n    if (!url) {\n      throw new Error(\"No URL provided.\");\n    }\n\n    if (!isUrl(url)) {\n      throw new Error(`Invalid URL: \"${url}\"`);\n    }\n\n    // Open the URL with the specified service\n    open(`${service}/${url}`);\n  } catch (error) {\n    await showToast({\n      style: Toast.Style.Failure,\n      title: \"Cannot remove paywall\",\n      message: (error as Error).message,\n    });\n  }\n};\n", "import { Clipboard, getSelectedText } from \"@raycast/api\";\n\nexport function isUrl(text: string): boolean {\n  return /^https?:\\/\\//.test(text);\n}\n\nexport async function getExistingText(fallbackText = \"\"): Promise<string> {\n  let selectedText = \"\";\n  let clipboardText: string | undefined = \"\";\n  fallbackText = fallbackText?.trim() ?? \"\";\n\n  // Get the selected text (if any)\n  try {\n    selectedText = (await getSelectedText()).trim();\n  } catch {\n    // Ignore errors\n  }\n\n  // Get the clipboard text (if any)\n  try {\n    clipboardText = await Clipboard.readText();\n    clipboardText = clipboardText ? clipboardText.trim() : \"\";\n  } catch {\n    // Ignore errors\n  }\n\n  return [selectedText, fallbackText, clipboardText].find((v) => !!v) ?? \"\";\n}\n"],
  "mappings": "yaAAA,IAAAA,EAAA,GAAAC,EAAAD,EAAA,aAAAE,IAAA,eAAAC,EAAAH,GAAA,IAAAI,EAAyE,wBCAzE,IAAAC,EAA2C,wBAEpC,SAASC,EAAMC,EAAuB,CAC3C,MAAO,eAAe,KAAKA,CAAI,CACjC,CAEA,eAAsBC,EAAgBC,EAAe,GAAqB,CACxE,IAAIC,EAAe,GACfC,EAAoC,GACxCF,EAAeA,GAAc,KAAK,GAAK,GAGvC,GAAI,CACFC,GAAgB,QAAM,mBAAgB,GAAG,KAAK,CAChD,MAAE,CAEF,CAGA,GAAI,CACFC,EAAgB,MAAM,YAAU,SAAS,EACzCA,EAAgBA,EAAgBA,EAAc,KAAK,EAAI,EACzD,MAAE,CAEF,CAEA,MAAO,CAACD,EAAcD,EAAcE,CAAa,EAAE,KAAMC,GAAM,CAAC,CAACA,CAAC,GAAK,EACzE,CDxBA,IAAOC,EAAQ,MAAOC,GAA+D,CACnF,GAAM,CAAE,QAAAC,CAAQ,EAAI,QAAM,uBAAiC,EAE3D,GAAI,CACF,IAAMC,EAAeF,EAAM,UAAU,KAAK,KAAK,GAAK,GAC9CG,EAAe,MAAMC,EAAgBJ,EAAM,YAAY,EACvDK,EAAM,CAACH,EAAcC,CAAY,EAAE,KAAMG,GAAM,CAAC,CAACA,CAAC,EAExD,GAAI,CAACD,EACH,MAAM,IAAI,MAAM,kBAAkB,EAGpC,GAAI,CAACE,EAAMF,CAAG,EACZ,MAAM,IAAI,MAAM,iBAAiBA,IAAM,KAIzC,QAAK,GAAGJ,KAAWI,GAAK,CAC1B,OAASG,EAAP,CACA,QAAM,aAAU,CACd,MAAO,QAAM,MAAM,QACnB,MAAO,wBACP,QAAUA,EAAgB,OAC5B,CAAC,CACH,CACF",
  "names": ["remove_paywall_exports", "__export", "remove_paywall_default", "__toCommonJS", "import_api", "import_api", "isUrl", "text", "getExistingText", "fallbackText", "selectedText", "clipboardText", "v", "remove_paywall_default", "props", "service", "argumentText", "existingText", "getExistingText", "url", "v", "isUrl", "error"]
}
